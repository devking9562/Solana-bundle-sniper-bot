{"version":3,"file":"index.iife.min.js","sources":["../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_assert.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/crypto.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/utils.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_md.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/_u64.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha512.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/ed25519.js","../src/utils/ed25519.ts","../src/utils/to-buffer.ts","../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js","../node_modules/.pnpm/base-x@3.0.9/node_modules/base-x/src/index.js","../node_modules/.pnpm/bs58@4.0.1/node_modules/bs58/index.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha256.js","../node_modules/.pnpm/text-encoding-utf-8@1.0.2/node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/.pnpm/borsh@0.7.0/node_modules/borsh/lib/index.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../node_modules/.pnpm/@solana+buffer-layout@4.0.1/node_modules/@solana/buffer-layout/lib/Layout.js","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/utils/guarded-array-utils.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/timing.ts","../src/sysvar.ts","../src/errors.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../node_modules/.pnpm/bigint-buffer@1.1.5/node_modules/bigint-buffer/dist/browser.js","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../node_modules/.pnpm/superstruct@2.0.2/node_modules/superstruct/dist/index.mjs","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v1.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/nil.js","../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/version.js","../node_modules/.pnpm/jayson@4.1.1_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/jayson/lib/generateRequest.js","../node_modules/.pnpm/jayson@4.1.1_bufferutil@4.0.8_utf-8-validate@5.0.10/node_modules/jayson/lib/client/browser/index.js","../src/epoch-schedule.ts","../src/__forks__/browser/fetch-impl.ts","../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js","../node_modules/.pnpm/rpc-websockets@9.0.2/node_modules/rpc-websockets/dist/index.browser.mjs","../src/rpc-websocket.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/sha3.js","../node_modules/.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/esm/hmac.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/.pnpm/@noble+curves@1.5.0/node_modules/@noble/curves/esm/secp256k1.js","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(`${title} must be valid boolean, got \"${value}\".`);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error(`expected valid ${title}: ${min} <= n < ${max}, got ${typeof n} ${n}`);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\nexport function FpLegendre(order) {\n    // (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n    // (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * NOTE: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const validateW = (W) => {\n        if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n            throw new Error(`Wrong window size=${W}, should be [1..${bits}]`);\n    };\n    const opts = (W) => {\n        validateW(W);\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, n, transform) {\n            const W = pointWindowSizes.get(P) || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return this.wNAF(W, comp, n);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { validateBasic, wNAF } from './curve.js';\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n/**\n * Creates Twisted Edwards curve with EdDSA signatures.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, d, p, n, Gx, Gy, h\n * const curve = twistedEdwards({ a, d, Fp: Field(p), n, Gx, Gy, h })\n */\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            abool('phflag', phflag);\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // 0 <= n < MASK\n    // Coordinates larger than Fp.ORDER are allowed for zip215\n    function aCoordinate(title, n) {\n        ut.aInRange('coordinate ' + title, n, _0n, MASK);\n    }\n    function assertPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { ex: x, ey: y, ez: z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n        const ax = modP(x * iz);\n        const ay = modP(y * iz);\n        const zz = modP(z * iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            aCoordinate('x', ex);\n            aCoordinate('y', ey);\n            aCoordinate('z', ez);\n            aCoordinate('t', et);\n            Object.freeze(this);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            aCoordinate('x', x);\n            aCoordinate('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            assertPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            assertPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n            const { p, f } = this.wNAF(n);\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            abool('zip215', zip215);\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            ut.aInRange('pointHex.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        ut.aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (zip215 !== undefined)\n            abool('zip215', zip215);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => Field(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","const END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nexport function guardedShift<T>(byteArray: T[]): T {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift() as T;\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nexport function guardedSplice<T>(\n  byteArray: T[],\n  ...args:\n    | [start: number, deleteCount?: number]\n    | [start: number, deleteCount: number, ...items: T[]]\n): T[] {\n  const [start] = args;\n  if (\n    args.length === 2 // Implies that `deleteCount` was supplied\n      ? start + (args[1] ?? 0) > byteArray.length\n      : start >= byteArray.length\n  ) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(\n    ...(args as Parameters<typeof Array.prototype.splice>),\n  );\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray),\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(\n      guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n    );\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(\n        byteArray,\n        0,\n        accountKeyIndexesLength,\n      );\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = guardedSplice(\n        byteArray,\n        0,\n        writableIndexesLength,\n      );\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(\n        byteArray,\n        0,\n        readonlyIndexesLength,\n      );\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\nimport {guardedSplice} from '../utils/guarded-array-utils';\n\n/** @internal */\ntype MessageSignednessErrors = {\n  invalid?: PublicKey[];\n  missing?: PublicKey[];\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures: boolean = true): boolean {\n    const signatureErrors = this._getMessageSignednessErrors(\n      this.serializeMessage(),\n      requireAllSignatures,\n    );\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(\n    message: Uint8Array,\n    requireAllSignatures: boolean,\n  ): MessageSignednessErrors | undefined {\n    const errors: MessageSignednessErrors = {};\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(\n        signData,\n        requireAllSignatures,\n      );\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${\n            sigErrors.invalid.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${\n            sigErrors.missing.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\nimport {guardedSplice} from '../utils/guarded-array-utils';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from './connection';\nimport {TransactionSignature} from './transaction';\n\nexport class SendTransactionError extends Error {\n  private signature: TransactionSignature;\n  private transactionMessage: string;\n  private transactionLogs: string[] | Promise<string[]> | undefined;\n\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs,\n  }: {\n    action: 'send' | 'simulate';\n    signature: TransactionSignature;\n    transactionMessage: string;\n    logs?: string[];\n  }) {\n    const maybeLogsOutput = logs\n      ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. `\n      : '';\n    const guideText =\n      '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message: string;\n    switch (action) {\n      case 'send':\n        message =\n          `Transaction ${signature} resulted in an error. \\n` +\n          `${transactionMessage}. ` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      case 'simulate':\n        message =\n          `Simulation failed. \\nMessage: ${transactionMessage}. \\n` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      default: {\n        message = `Unknown action '${((a: never) => a)(action)}'`;\n      }\n    }\n    super(message);\n\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n\n  get transactionError(): {message: string; logs?: string[]} {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs)\n        ? this.transactionLogs\n        : undefined,\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs(): string[] | undefined {\n    const cachedLogs = this.transactionLogs;\n    if (\n      cachedLogs != null &&\n      typeof cachedLogs === 'object' &&\n      'then' in cachedLogs\n    ) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n\n  async getLogs(connection: Connection): Promise<string[]> {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection\n          .getTransaction(this.signature)\n          .then(tx => {\n            if (tx && tx.meta && tx.meta.logMessages) {\n              const logs = tx.meta.logMessages;\n              this.transactionLogs = logs;\n              resolve(logs);\n            } else {\n              reject(new Error('Log messages not found'));\n            }\n          })\n          .catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\nimport {SendTransactionError} from '../errors';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`,\n      });\n    }\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a non-array object.\n */\nfunction isNonArrayObject(x) {\n    return isObject(x) && !Array.isArray(x);\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch, mask };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema. Masking applies recursively to\n     * props of `object` structs only.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `coerce` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful. Also, `mask` will turn on\n     * masking of the unknown `object` props recursively if passed.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value, ctx) {\n            if (!isNonArrayObject(value)) {\n                return value;\n            }\n            const coerced = { ...value };\n            // The `object` struct has special behaviour enabled by the mask flag.\n            // When masking, properties that are not in the schema are deleted from\n            // the coerced object instead of eventually failing validaiton.\n            if (ctx.mask && schema) {\n                for (const key in coerced) {\n                    if (schema[key] === undefined) {\n                        delete coerced[key];\n                    }\n                }\n            }\n            return coerced;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value, ctx) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, {\n                    coerce: true,\n                    mask: ctx.mask,\n                });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export const Headers: typeof globalThis.Headers = globalThis.Headers;\nexport const Request: typeof globalThis.Request = globalThis.Request;\nexport const Response: typeof globalThis.Response = globalThis.Response;\nexport default globalThis.fetch;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { Buffer } from 'buffer';\nimport { EventEmitter } from 'eventemitter3';\n\n// node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js\nvar WebSocketBrowserImpl = class extends EventEmitter {\n  socket;\n  /** Instantiate a WebSocket class\n  * @constructor\n  * @param {String} address - url to a websocket server\n  * @param {(Object)} options - websocket options\n  * @param {(String|Array)} protocols - a list of protocols\n  * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n  */\n  constructor(address, options, protocols) {\n    super();\n    this.socket = new window.WebSocket(address, protocols);\n    this.socket.onopen = () => this.emit(\"open\");\n    this.socket.onmessage = (event) => this.emit(\"message\", event.data);\n    this.socket.onerror = (error) => this.emit(\"error\", error);\n    this.socket.onclose = (event) => {\n      this.emit(\"close\", event.code, event.reason);\n    };\n  }\n  /**\n  * Sends data through a websocket connection\n  * @method\n  * @param {(String|Object)} data - data to be sent via websocket\n  * @param {Object} optionsOrCallback - ws options\n  * @param {Function} callback - a callback called once the data is sent\n  * @return {Undefined}\n  */\n  send(data, optionsOrCallback, callback) {\n    const cb = callback || optionsOrCallback;\n    try {\n      this.socket.send(data);\n      cb();\n    } catch (error) {\n      cb(error);\n    }\n  }\n  /**\n  * Closes an underlying socket\n  * @method\n  * @param {Number} code - status code explaining why the connection is being closed\n  * @param {String} reason - a description why the connection is closing\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  close(code, reason) {\n    this.socket.close(code, reason);\n  }\n  addEventListener(type, listener, options) {\n    this.socket.addEventListener(type, listener, options);\n  }\n};\nfunction WebSocket(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}\n\n// src/lib/utils.ts\nvar DefaultDataPack = class {\n  encode(value) {\n    return JSON.stringify(value);\n  }\n  decode(value) {\n    return JSON.parse(value);\n  }\n};\n\n// src/lib/client.ts\nvar CommonClient = class extends EventEmitter {\n  address;\n  rpc_id;\n  queue;\n  options;\n  autoconnect;\n  ready;\n  reconnect;\n  reconnect_timer_id;\n  reconnect_interval;\n  max_reconnects;\n  rest_options;\n  current_reconnects;\n  generate_request_id;\n  socket;\n  webSocketFactory;\n  dataPack;\n  /**\n  * Instantiate a Client class.\n  * @constructor\n  * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n  * @param {String} address - url to a websocket server\n  * @param {Object} options - ws options object with reconnect parameters\n  * @param {Function} generate_request_id - custom generation request Id\n  * @param {DataPack} dataPack - data pack contains encoder and decoder\n  * @return {CommonClient}\n  */\n  constructor(webSocketFactory, address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5,\n    ...rest_options\n  } = {}, generate_request_id, dataPack) {\n    super();\n    this.webSocketFactory = webSocketFactory;\n    this.queue = {};\n    this.rpc_id = 0;\n    this.address = address;\n    this.autoconnect = autoconnect;\n    this.ready = false;\n    this.reconnect = reconnect;\n    this.reconnect_timer_id = void 0;\n    this.reconnect_interval = reconnect_interval;\n    this.max_reconnects = max_reconnects;\n    this.rest_options = rest_options;\n    this.current_reconnects = 0;\n    this.generate_request_id = generate_request_id || (() => ++this.rpc_id);\n    if (!dataPack) this.dataPack = new DefaultDataPack();\n    else this.dataPack = dataPack;\n    if (this.autoconnect)\n      this._connect(this.address, {\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects,\n        ...this.rest_options\n      });\n  }\n  /**\n  * Connects to a defined server if not connected already.\n  * @method\n  * @return {Undefined}\n  */\n  connect() {\n    if (this.socket) return;\n    this._connect(this.address, {\n      autoconnect: this.autoconnect,\n      reconnect: this.reconnect,\n      reconnect_interval: this.reconnect_interval,\n      max_reconnects: this.max_reconnects,\n      ...this.rest_options\n    });\n  }\n  /**\n  * Calls a registered RPC method on server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object|Array} params - optional method parameters\n  * @param {Number} timeout - RPC reply timeout value\n  * @param {Object} ws_opts - options passed to ws\n  * @return {Promise}\n  */\n  call(method, params, timeout, ws_opts) {\n    if (!ws_opts && \"object\" === typeof timeout) {\n      ws_opts = timeout;\n      timeout = null;\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const rpc_id = this.generate_request_id(method, params);\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params: params || void 0,\n        id: rpc_id\n      };\n      this.socket.send(this.dataPack.encode(message), ws_opts, (error) => {\n        if (error) return reject(error);\n        this.queue[rpc_id] = { promise: [resolve, reject] };\n        if (timeout) {\n          this.queue[rpc_id].timeout = setTimeout(() => {\n            delete this.queue[rpc_id];\n            reject(new Error(\"reply timeout\"));\n          }, timeout);\n        }\n      });\n    });\n  }\n  /**\n  * Logins with the other side of the connection.\n  * @method\n  * @param {Object} params - Login credentials object\n  * @return {Promise}\n  */\n  async login(params) {\n    const resp = await this.call(\"rpc.login\", params);\n    if (!resp) throw new Error(\"authentication failed\");\n    return resp;\n  }\n  /**\n  * Fetches a list of client's methods registered on server.\n  * @method\n  * @return {Array}\n  */\n  async listMethods() {\n    return await this.call(\"__listMethods\");\n  }\n  /**\n  * Sends a JSON-RPC 2.0 notification to server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object} params - optional method parameters\n  * @return {Promise}\n  */\n  notify(method, params) {\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params\n      };\n      this.socket.send(this.dataPack.encode(message), (error) => {\n        if (error) return reject(error);\n        resolve();\n      });\n    });\n  }\n  /**\n  * Subscribes for a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async subscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.on\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\n        \"Failed subscribing to an event '\" + event + \"' with: \" + result[event]\n      );\n    return result;\n  }\n  /**\n  * Unsubscribes from a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async unsubscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.off\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\"Failed unsubscribing from an event with: \" + result);\n    return result;\n  }\n  /**\n  * Closes a WebSocket connection gracefully.\n  * @method\n  * @param {Number} code - socket close code\n  * @param {String} data - optional data to be sent before closing\n  * @return {Undefined}\n  */\n  close(code, data) {\n    this.socket.close(code || 1e3, data);\n  }\n  /**\n  * Enable / disable automatic reconnection.\n  * @method\n  * @param {Boolean} reconnect - enable / disable reconnection\n  * @return {Undefined}\n  */\n  setAutoReconnect(reconnect) {\n    this.reconnect = reconnect;\n  }\n  /**\n  * Set the interval between reconnection attempts.\n  * @method\n  * @param {Number} interval - reconnection interval in milliseconds\n  * @return {Undefined}\n  */\n  setReconnectInterval(interval) {\n    this.reconnect_interval = interval;\n  }\n  /**\n  * Set the maximum number of reconnection attempts.\n  * @method\n  * @param {Number} max_reconnects - maximum reconnection attempts\n  * @return {Undefined}\n  */\n  setMaxReconnects(max_reconnects) {\n    this.max_reconnects = max_reconnects;\n  }\n  /**\n  * Connection/Message handler.\n  * @method\n  * @private\n  * @param {String} address - WebSocket API address\n  * @param {Object} options - ws options object\n  * @return {Undefined}\n  */\n  _connect(address, options) {\n    clearTimeout(this.reconnect_timer_id);\n    this.socket = this.webSocketFactory(address, options);\n    this.socket.addEventListener(\"open\", () => {\n      this.ready = true;\n      this.emit(\"open\");\n      this.current_reconnects = 0;\n    });\n    this.socket.addEventListener(\"message\", ({ data: message }) => {\n      if (message instanceof ArrayBuffer)\n        message = Buffer.from(message).toString();\n      try {\n        message = this.dataPack.decode(message);\n      } catch (error) {\n        return;\n      }\n      if (message.notification && this.listeners(message.notification).length) {\n        if (!Object.keys(message.params).length)\n          return this.emit(message.notification);\n        const args = [message.notification];\n        if (message.params.constructor === Object) args.push(message.params);\n        else\n          for (let i = 0; i < message.params.length; i++)\n            args.push(message.params[i]);\n        return Promise.resolve().then(() => {\n          this.emit.apply(this, args);\n        });\n      }\n      if (!this.queue[message.id]) {\n        if (message.method) {\n          return Promise.resolve().then(() => {\n            this.emit(message.method, message?.params);\n          });\n        }\n        return;\n      }\n      if (\"error\" in message === \"result\" in message)\n        this.queue[message.id].promise[1](\n          new Error(\n            'Server response malformed. Response must include either \"result\" or \"error\", but not both.'\n          )\n        );\n      if (this.queue[message.id].timeout)\n        clearTimeout(this.queue[message.id].timeout);\n      if (message.error) this.queue[message.id].promise[1](message.error);\n      else this.queue[message.id].promise[0](message.result);\n      delete this.queue[message.id];\n    });\n    this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error));\n    this.socket.addEventListener(\"close\", ({ code, reason }) => {\n      if (this.ready)\n        setTimeout(() => this.emit(\"close\", code, reason), 0);\n      this.ready = false;\n      this.socket = void 0;\n      if (code === 1e3) return;\n      this.current_reconnects++;\n      if (this.reconnect && (this.max_reconnects > this.current_reconnects || this.max_reconnects === 0))\n        this.reconnect_timer_id = setTimeout(\n          () => this._connect(address, options),\n          this.reconnect_interval\n        );\n    });\n  }\n};\n\n// src/index.browser.ts\nvar Client = class extends CommonClient {\n  constructor(address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5\n  } = {}, generate_request_id) {\n    super(\n      WebSocket,\n      address,\n      {\n        autoconnect,\n        reconnect,\n        reconnect_interval,\n        max_reconnects\n      },\n      generate_request_id\n    );\n  }\n};\n\nexport { Client, CommonClient, DefaultDataPack, WebSocket };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.mjs.map","import {\n  CommonClient,\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n  WebSocket as createRpc,\n} from 'rpc-websockets';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends CommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket as ReturnType<typeof createRpc>;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<CommonClient['call']>\n  ): ReturnType<CommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<CommonClient['notify']>\n  ): ReturnType<CommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to agave-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remarks If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remarks If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(\n  filters: GetProgramAccountsFilter[],\n): GetProgramAccountsFilter[] {\n  return filters.map(filter =>\n    'memcmp' in filter\n      ? {\n          ...filter,\n          memcmp: {\n            ...filter.memcmp,\n            encoding: filter.memcmp.encoding ?? 'base58',\n          },\n        }\n      : filter,\n  );\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of base58-encoded account addresses to return post simulation state for */\n  accounts?: {\n    /** The encoding of the returned account's data */\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n  /** Optional parameter used to include inner instructions in the simulation */\n  innerInstructions?: boolean;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n  innerInstructions?: ParsedInnerInstruction[] | null;\n};\nconst ParsedInstructionStruct = pick({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown(),\n});\n\nconst PartiallyDecodedInstructionStruct = pick({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string(),\n});\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n    innerInstructions: optional(\n      nullable(\n        array(\n          pick({\n            index: number(),\n            instructions: array(\n              union([\n                ParsedInstructionStruct,\n                PartiallyDecodedInstructionStruct,\n              ]),\n            ),\n          }),\n        ),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: nullable(ConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n  } & (\n    | {\n        encoding?: 'base58'; // Base-58 is the default when not supplied.\n        /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n        bytes: string;\n      }\n    | {\n        encoding: 'base64';\n        /** data to match, as base-64 encoded string */\n        bytes: string;\n      }\n  );\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\nexport type AccountSubscriptionConfig = Readonly<{\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /**\n   * Encoding format for Account data\n   *   - `base58` is slow.\n   *   - `jsonParsed` encoding attempts to use program-specific state parsers to return more\n   *      human-readable and explicit account state data\n   *   - If `jsonParsed` is requested but a parser cannot be found, the field falls back to `base64`\n   *     encoding, detectable when the `data` field is type `string`.\n   */\n  encoding?: 'base58' | 'base64' | 'base64+zstd' | 'jsonParsed';\n}>;\n\nexport type ProgramAccountSubscriptionConfig = Readonly<{\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /**\n   * Encoding format for Account data\n   *   - `base58` is slow.\n   *   - `jsonParsed` encoding attempts to use program-specific state parsers to return more\n   *      human-readable and explicit account state data\n   *   - If `jsonParsed` is requested but a parser cannot be found, the field falls back to `base64`\n   *     encoding, detectable when the `data` field is type `string`.\n   */\n  encoding?: 'base58' | 'base64' | 'base64+zstd' | 'jsonParsed';\n  /**\n   * Filter results using various filter objects\n   * The resultant account must meet ALL filter criteria to be included in the returned results\n   */\n  filters?: GetProgramAccountsFilter[];\n}>;\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      {\n        ...configWithoutEncoding,\n        ...(configWithoutEncoding.filters\n          ? {\n              filters: applyDefaultMemcmpEncodingToFilters(\n                configWithoutEncoding.filters,\n              ),\n            }\n          : null),\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      if (\n        configOrSigners &&\n        typeof configOrSigners === 'object' &&\n        'innerInstructions' in configOrSigners\n      ) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    if (\n      configOrSigners &&\n      typeof configOrSigners === 'object' &&\n      'innerInstructions' in configOrSigners\n    ) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      skipPreflight === true\n        ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n        : (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    config?: AccountSubscriptionConfig,\n  ): ClientSubscriptionId;\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId;\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitmentOrConfig?: Commitment | AccountSubscriptionConfig,\n  ): ClientSubscriptionId {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n      config,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    config?: ProgramAccountSubscriptionConfig,\n  ): ClientSubscriptionId;\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId;\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitmentOrConfig?: Commitment | ProgramAccountSubscriptionConfig,\n    maybeFilters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      config\n        ? config\n        : maybeFilters\n          ? {filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)}\n          : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return ut.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, N); // disabled by default, enabled for BLS\n        ut.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            ut.aInRange('scalar', sc, _0n, CURVE.n);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (sc === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, sc);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            abool('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!ut.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            ut.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            ut.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        ut.aInRange(`num < 2^${CURVE.nBitLength}`, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        validateSigVerOpts(opts);\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { inRange, aInRange, bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE, } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 short weierstrass curve and ECDSA signatures over it.\n */\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    aInRange('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1P))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1N))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n */\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeStateV2::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(\n    params: SplitStakeParams,\n    // Compute the cost of allocating the new stake account in lamports\n    rentExemptReserve: number,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: rentExemptReserve,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(\n    params: SplitStakeWithSeedParams,\n    // If this stake account is new, compute the cost of allocating it in lamports\n    rentExemptReserve?: number,\n  ): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(\n        SystemProgram.transfer({\n          fromPubkey: params.authorizedPubkey,\n          toPubkey: splitStakePubkey,\n          lamports: rentExemptReserve,\n        }),\n      );\n    }\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\nexport type UpdateValidatorIdentityParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  nodePubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'InitializeAccount'\n  | 'Withdraw'\n  | 'UpdateValidatorIdentity';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n  UpdateValidatorIdentity: IInstructionInputData;\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct<\n      VoteInstructionInputData['UpdateValidatorIdentity']\n    >([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = 3762;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insufficient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(\n    params: UpdateValidatorIdentityParams,\n  ): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, nodePubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\nimport {guardedShift, guardedSplice} from './utils/guarded-array-utils';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, validator logo URL */\n  iconUrl?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport {SendTransactionError} from '../errors';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`,\n      });\n    }\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","isBytes","lengths","hash","h","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","crypto","globalThis","u32","Uint32Array","createView","DataView","rotr","word","shift","byteSwap","byteSwap32","TextEncoder","encode","toBytes","abytes","concatBytes","arrays","sum","pad","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","l","setUint32","Chi","Maj","HashMD","padOffset","take","dataView","process","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","item","abool","title","hexes","_","padStart","bytesToHex","hex","numberToHexUnpadded","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","ai","n1","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","expectedLength","equalBytes","diff","isPosBig","inRange","aInRange","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","notImplemented","memoized","WeakMap","args","computed","_3n","_4n","_5n","_8n","mod","result","power","modulo","pow2","invert","u","q","r","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","sqr","Q1div2","tonelliSlow","neg","ONE","g","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","reduce","FpPow","f","p","FpInvertBatch","nums","lastMultiplied","acc","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","key","fieldLen","minLen","reduced","pointPrecomputes","pointWindowSizes","wNAF","bits","constTimeNegate","condition","negate","validateW","W","windows","windowSize","unsafeLadder","elm","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","transform","comp","setWindowSize","delete","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","aCoordinate","ut.aInRange","assertPoint","other","Point","toAffineMemo","iz","ex","ey","ez","z","ax","ay","zz","assertValidMemo","X","Y","et","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","toAffine","static","toInv","fromAffine","_setWindowSize","wnaf","assertValidity","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","normalizeZ","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","clearCofactor","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","ut.concatBytes","sign","options","R","verifyOpts","verify","sig","publicKey","SB","fromHex","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","ed25519_pow_2_252_3","_10n","_20n","_40n","_80n","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","module","assert","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","move","_move","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","self","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","SHA256_K","SHA256_IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","forEach","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","option","Map","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Struct$1","Struct","properties","assign","SOLANA_SCHEMA","Enum","enum","keys","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","toBase58","zeroPad","toStringTag","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddressSync","pubkeyData","pubkey","_PublicKey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","Layout_1","Layout$1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","assert$1","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","guardedSplice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","JSON","stringify","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","_compile","valid","every","pair","serializeMessage","async","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","missing","invalid","config","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","logs","maybeLogsOutput","guideText","transactionLogs","transactionError","cachedLogs","Promise","resolve","reject","getTransaction","then","tx","logMessages","catch","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","encodeDecode","bigInt","bigIntLayout","SystemInstruction","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","params","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","round","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","StructError","failure","failures","cached","explanation","rest","path","cause","isIterable","isObject","iterator","isNonArrayObject","print","shiftIterator","done","toFailure","branch","refinement","toFailures","run","coerce","coercer","validator","ts","refiner","props","is","validate","tuples","tuple","define","any","Element","literal","description","never","nullable","optional","record","Key","Value","Structs","Never","coerced","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","hashfunc","generateUUID","namespace","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","v5","v5$1","nil","generateRequest","method","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","fetch","Events","__proto__","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","WebSocketBrowserImpl","socket","protocols","WebSocket","onopen","onmessage","onerror","onclose","reason","send","optionsOrCallback","cb","close","addEventListener","DefaultDataPack","CommonClient","rpc_id","queue","autoconnect","ready","reconnect","reconnect_timer_id","reconnect_interval","max_reconnects","rest_options","current_reconnects","generate_request_id","webSocketFactory","dataPack","_connect","connect","timeout","ws_opts","promise","resp","notify","setAutoReconnect","setReconnectInterval","interval","setMaxReconnects","clearTimeout","notification","RpcWebSocketClient","url","rpc","createRpc","underlyingSocket","readyState","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","applyDefaultMemcmpEncodingToFilters","filters","memcmp","createRpcResult","pick","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","ParsedInstructionStruct","PartiallyDecodedInstructionStruct","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","innerInstructions","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","info","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","baseSchema","withContext","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","lockedWritableAccounts","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","maybeFilters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","checkKeysLength","recentSlot","recipient","AddressLookupTableProgram","lookupTableAddress","bumpSeed","addr","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","additionalFee","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","finish","writeInto","bufferOut","xofInto","xof","keccak_256","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","getPrototypeOf","hmac","validateSigVerOpts","lowS","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","ut.abytes","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","ut.inRange","normPrivateKeyToScalar","ut.isBytes","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","hasEvenY","U1","U2","t0","t1","t3","t4","t5","sc","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","bits2int","bits2int_modN","weierstrass","compressedLen","uncompressedLen","invN","mod.invert","cat","sqrtError","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","mod.getMinHashLength","mod.mapHashToField","fromPrivateKey","isProbPub","getSharedSecret","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","sg","_sig","fromDER","derError","fromCompact","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","c2","ecdsaSign","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","_Lockup","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","rentExemptReserve","splitInstruction","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","currentVoteAccountBalance","rentExemptMinimum","withdraw","VALIDATOR_INFO_KEY","InfoString","website","details","iconUrl","keybaseUsername","ValidatorInfo","configKeyCount","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,27,50,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,86,87,88,89,90]}